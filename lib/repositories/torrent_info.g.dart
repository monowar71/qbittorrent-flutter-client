// GENERATED CODE - DO NOT MODIFY BY HAND

part of 'torrent_info.dart';

// **************************************************************************
// JsonSerializableGenerator
// **************************************************************************

TorrentInfo _$TorrentInfoFromJson(Map<String, dynamic> json) => TorrentInfo(
      addedOn: (json['added_on'] as num).toInt(),
      amountLeft: (json['amount_left'] as num).toInt(),
      autoTmm: json['auto_tmm'] as bool,
      availability: (json['availability'] as num).toDouble(),
      category: json['category'] as String,
      comment: json['comment'] as String,
      completed: (json['completed'] as num).toInt(),
      completionOn: (json['completion_on'] as num).toInt(),
      contentPath: json['content_path'] as String,
      dlLimit: (json['dl_limit'] as num).toInt(),
      dlspeed: (json['dlspeed'] as num).toInt(),
      downloadPath: json['download_path'] as String,
      downloaded: (json['downloaded'] as num).toInt(),
      downloadedSession: (json['downloaded_session'] as num).toInt(),
      eta: (json['eta'] as num).toInt(),
      firstLastPiecePrio: json['f_l_piece_prio'] as bool,
      forceStart: json['force_start'] as bool,
      hasMetadata: json['has_metadata'] as bool,
      hash: json['hash'] as String,
      inactiveSeedingTimeLimit:
          (json['inactive_seeding_time_limit'] as num).toInt(),
      infohashV1: json['infohash_v1'] as String,
      infohashV2: json['infohash_v2'] as String,
      lastActivity: (json['last_activity'] as num).toInt(),
      magnetUri: json['magnet_uri'] as String,
      maxInactiveSeedingTime:
          (json['max_inactive_seeding_time'] as num).toInt(),
      maxRatio: (json['max_ratio'] as num).toDouble(),
      maxSeedingTime: (json['max_seeding_time'] as num).toInt(),
      name: json['name'] as String,
      numComplete: (json['num_complete'] as num).toInt(),
      numIncomplete: (json['num_incomplete'] as num).toInt(),
      numLeechs: (json['num_leechs'] as num).toInt(),
      numSeeds: (json['num_seeds'] as num).toInt(),
      popularity: (json['popularity'] as num).toDouble(),
      priority: (json['priority'] as num).toInt(),
      private: json['private'] as bool,
      progress: (json['progress'] as num).toDouble(),
      ratio: (json['ratio'] as num).toDouble(),
      ratioLimit: (json['ratio_limit'] as num).toInt(),
      reannounce: (json['reannounce'] as num).toInt(),
      rootPath: json['root_path'] as String,
      savePath: json['save_path'] as String,
      seedingTime: (json['seeding_time'] as num).toInt(),
      seedingTimeLimit: (json['seeding_time_limit'] as num).toInt(),
      seenComplete: (json['seen_complete'] as num).toInt(),
      sequentialDownload: json['seq_dl'] as bool,
      size: (json['size'] as num).toInt(),
      state: json['state'] as String,
      superSeeding: json['super_seeding'] as bool,
      tags: json['tags'] as String,
      timeActive: (json['time_active'] as num).toInt(),
      totalSize: (json['total_size'] as num).toInt(),
      tracker: json['tracker'] as String,
      trackersCount: (json['trackers_count'] as num).toInt(),
      upLimit: (json['up_limit'] as num).toInt(),
      uploaded: (json['uploaded'] as num).toInt(),
      uploadedSession: (json['uploaded_session'] as num).toInt(),
      upspeed: (json['upspeed'] as num).toInt(),
    );

Map<String, dynamic> _$TorrentInfoToJson(TorrentInfo instance) =>
    <String, dynamic>{
      'added_on': instance.addedOn,
      'amount_left': instance.amountLeft,
      'auto_tmm': instance.autoTmm,
      'availability': instance.availability,
      'category': instance.category,
      'comment': instance.comment,
      'completed': instance.completed,
      'completion_on': instance.completionOn,
      'content_path': instance.contentPath,
      'dl_limit': instance.dlLimit,
      'dlspeed': instance.dlspeed,
      'download_path': instance.downloadPath,
      'downloaded': instance.downloaded,
      'downloaded_session': instance.downloadedSession,
      'eta': instance.eta,
      'f_l_piece_prio': instance.firstLastPiecePrio,
      'force_start': instance.forceStart,
      'has_metadata': instance.hasMetadata,
      'hash': instance.hash,
      'inactive_seeding_time_limit': instance.inactiveSeedingTimeLimit,
      'infohash_v1': instance.infohashV1,
      'infohash_v2': instance.infohashV2,
      'last_activity': instance.lastActivity,
      'magnet_uri': instance.magnetUri,
      'max_inactive_seeding_time': instance.maxInactiveSeedingTime,
      'max_ratio': instance.maxRatio,
      'max_seeding_time': instance.maxSeedingTime,
      'name': instance.name,
      'num_complete': instance.numComplete,
      'num_incomplete': instance.numIncomplete,
      'num_leechs': instance.numLeechs,
      'num_seeds': instance.numSeeds,
      'popularity': instance.popularity,
      'priority': instance.priority,
      'private': instance.private,
      'progress': instance.progress,
      'ratio': instance.ratio,
      'ratio_limit': instance.ratioLimit,
      'reannounce': instance.reannounce,
      'root_path': instance.rootPath,
      'save_path': instance.savePath,
      'seeding_time': instance.seedingTime,
      'seeding_time_limit': instance.seedingTimeLimit,
      'seen_complete': instance.seenComplete,
      'seq_dl': instance.sequentialDownload,
      'size': instance.size,
      'state': instance.state,
      'super_seeding': instance.superSeeding,
      'tags': instance.tags,
      'time_active': instance.timeActive,
      'total_size': instance.totalSize,
      'tracker': instance.tracker,
      'trackers_count': instance.trackersCount,
      'up_limit': instance.upLimit,
      'uploaded': instance.uploaded,
      'uploaded_session': instance.uploadedSession,
      'upspeed': instance.upspeed,
    };
